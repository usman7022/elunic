volumes:
  mysqldata: {}

services:
  app:
    build:
      context: _fixtures/dockershell
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 18
        NPM_VERSION: 9
        NESTJS_VERSION: 10
        NG_VERSION: 17
        NX_VERSION: 17
    # Makes the docker container/image list easier to read
    image: ${COMPOSE_PROJECT_NAME:-shopfloorio}-dockershell
    # This gives us a nice name for the host in the container shell instead of app@dfeb636a
    hostname: ${COMPOSE_PROJECT_NAME:-shopfloorio}-dockershell
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    working_dir: /app
    depends_on:
      - reverse-proxy
      - entrypoint
      - db
      - db-testing
      - phpmyadmin
    volumes:
      - ./:/app
      - ~/.npmrc:/root/.npmrc
      - ~/.npmrc:/home/node/.npmrc
      - ~/.npm/:/home/node/.npm
    ports:
      - '13000-13015:13000-13015'
    environment:
      APP_DB_HOST: db
      APP_DB_PORT: 3306
      APP_DB_USER: app
      APP_DB_PASS: app
      APP_DB_NAME: app
    logging:
      options:
        max-size: 10m

  entrypoint:
    image: nginx:1.23-alpine
    depends_on:
      - reverse-proxy
    volumes:
      - ./_fixtures/dockershell/entrypoint/:/etc/nginx/templates/:ro
      - ./_fixtures/dockershell/entrypoint/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./_fixtures/dockershell/entrypoint/certs/:/etc/nginx/certs/:ro
      - ./_fixtures/dockershell/entrypoint/99-entrypoint-conditional-ssl.sh:/docker-entrypoint.d/99-entrypoint-conditional-ssl.sh:ro
    ports:
      - '${SIO_EXTERNAL_PORT:-80}:80'
    environment:
      SIO_EXTERNAL_SCHEME: ${SIO_EXTERNAL_SCHEME:-http}
      SIO_EXTERNAL_HOSTNAME: ${SIO_EXTERNAL_HOSTNAME:-localhost}
      SIO_EXTERNAL_PORT: ${SIO_EXTERNAL_PORT:-80}
      SIO_EXTERNAL_HOSTNAMEPORT: ${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}
    logging:
      options:
        max-size: 10m

  reverse-proxy:
    image: traefik:v2.9
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '13088:8080'
    command:
      - '--log.level=DEBUG'
      - '--providers.file'
      - '--providers.file.directory=/etc/traefik-dynamic/'
      - '--providers.file.watch=true'
      - '--providers.docker'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.constraints=Label(`traefik.tags`,`${COMPOSE_PROJECT_NAME:-shopfloorio}-dev`)'
      - '--api.dashboard=true'
      # Don't do this in production!
      - '--api.insecure=true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./_fixtures/dockershell/traefik/:/etc/traefik-dynamic/:ro
    # Make these available to the Traefik configuration file templating
    environment:
      SIO_EXTERNAL_SCHEME: ${SIO_EXTERNAL_SCHEME:-http}
      SIO_EXTERNAL_HOSTNAME: ${SIO_EXTERNAL_HOSTNAME:-localhost}
      SIO_EXTERNAL_PORT: ${SIO_EXTERNAL_PORT:-80}
      SIO_EXTERNAL_HOSTNAMEPORT: ${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}
    logging:
      options:
        max-size: 10m

  db:
    image: mysql:8.0.28-oracle
    hostname: db
    ports:
      - 3306:3306
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--authentication_policy=mysql_native_password'
      - '--general-log=1'
      - '--general-log-file=/var/lib/mysql/general-log.log'
    environment:
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: app
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysqldata:/var/lib/mysql
    logging:
      options:
        max-size: 10m

  # The testing DB service has no volume. That is by design. [wh]
  db-testing:
    image: mysql:8.0.28-oracle
    hostname: db-testing
    ports:
      - 3307:3306
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--authentication_policy=mysql_native_password'
    environment:
      MYSQL_DATABASE: app-testing
      MYSQL_USER: app
      MYSQL_PASSWORD: app
      MYSQL_ROOT_PASSWORD: root
    logging:
      options:
        max-size: 10m

  phpmyadmin:
    # ARM64 compatible image
    image: linuxserver/phpmyadmin
    hostname: phpmyadmin
    ports:
      - 13079:80
    environment:
      PMA_HOSTS: >-
        db,
        db-testing,
      # Example for a separate database for a specific service
      # db-backend2,
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 1024M
    labels:
      traefik.enable: 'true'
      traefik.tags: ${COMPOSE_PROJECT_NAME:-shopfloorio}-dev
      traefik.http.routers.phpmyadmin.rule: PathPrefix(`/phpmyadmin`) || PathPrefix(`/pma`)
      traefik.http.routers.phpmyadmin.entrypoints: http
      traefik.http.routers.phpmyadmin.service: phpmyadmin
      traefik.http.services.phpmyadmin.loadbalancer.server.port: 80
      traefik.http.middlewares.phpmyadmin-stripprefix.stripprefix.prefixes: /phpmyadmin,/pma
      traefik.http.middlewares.phpmyadmin-stripprefix.stripprefix.forceSlash: false
      # When there is no trailing slash, the user gets a blank screen because resource files are loaded with the wrong URL
      # This redirect adds a trailing slash to the prefixes.
      traefik.http.middlewares.phpmyadmin-trailingslash-redirect.redirectregex.regex: '^https?://[^/]+/(phpmyadmin|pma)$$'
      traefik.http.middlewares.phpmyadmin-trailingslash-redirect.redirectregex.replacement: '${SIO_EXTERNAL_SCHEME:-http}://${SIO_EXTERNAL_HOSTNAMEPORT:-localhost}/$${1}/'
      traefik.http.routers.phpmyadmin.middlewares: phpmyadmin-trailingslash-redirect,phpmyadmin-stripprefix
    logging:
      options:
        max-size: 10m
